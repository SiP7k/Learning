using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Start
{
    class Test
    {
        public static void Main()
        {
            bool isTrading = true;
            string userInput;
            Person player = new Person(new List<Item> { }, 100, "Виталий", 0, 10);
            Person salesman = new Person(new List<Item> { }, 5000, "Кузнец");
            player.Add(new Item(5, "Яблоко"));
            salesman.Add(new Item(30, "Меч"));
            salesman.Add(new Item(35, "Щит"));
            salesman.Add(new Item(20, "Шлем"));
            salesman.Add(new Item(5, "Банан"));
            salesman.Add(new Item(100, "Коробка-сюрприз"));
            salesman.Add(new Item(10, "Нож"));
            salesman.Add(new Item(1, "Камень"));

            while (isTrading == true)
            {
                Console.Clear();
                Console.WriteLine("1 - купить предмет\n2 - продать предмет\n3 - выйти из магазина");
                Renderer.DrawTradeWindow(player, salesman);
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case "1":
                        player.SellItem(salesman);
                        break;
                    case "2":
                        salesman.SellItem(player);
                        break;
                    case "3":
                        isTrading = false;
                        break;
                }
            }
        }
    }
    class Person
    {
        public string Name { get; private set; }
        public int Money { get; private set; }
        public int InventoryPositionX { get; private set; }
        public int InventoryPositionY { get; private set; }
        private List<Item> _inventory = new List<Item>();

        public Person(List<Item> inventory, int money, string name, int inventoryPositionX = 30, int inventoryPositionY = 10)
        {
            InventoryPositionX = inventoryPositionX;
            InventoryPositionY = inventoryPositionY;
            _inventory = inventory;
            Money = money;
            Name = name;
        }
        public void SellItem(Person seller)
        {
            Console.Clear();
            Renderer.ShowInventory(seller);
            Console.WriteLine("Введите номер предмета: ");
            string item = Console.ReadLine();

            if (Int32.TryParse(item, out int result) && result <= seller._inventory.Count && result > 0)
            {
                Item itemToAdd = seller._inventory[result - 1];
                seller._inventory.RemoveAt(result - 1);
                _inventory.Add(itemToAdd);
                Money -= itemToAdd.Price;
                seller.Money += itemToAdd.Price;
            }
            else
            {
                Console.WriteLine("Неправильный ввод данных! Нажмите любую кнопку для продолжения...");
                Console.ReadKey();
            }
        }
        public void Add(Item item)
        {
            _inventory.Add(item);
        }
        public Item[] GiveCopyOfInventory()
        {
            Item[] tempInventory = new Item[_inventory.Count];
            _inventory.CopyTo(tempInventory);
            return tempInventory; 
        }
    }
    class Item
    {
        public int Price { get; private set; }
        public string Name { get; private set; }

        public Item(int price, string name)
        {
            Name = name;
            Price = price;
        }
    }
    class Renderer
    {
        public static void DrawTradeWindow(Person player, Person salesman)
        {
            Console.SetCursorPosition(player.InventoryPositionX, player.InventoryPositionY);
            ShowInventory(player);
            Console.SetCursorPosition(salesman.InventoryPositionX, salesman.InventoryPositionY);
            ShowInventory(salesman);
            Console.WriteLine();
        }
        public static void ShowInventory(Person person)
        {
            int emptyLines = 2;
            Console.WriteLine($"Инвентарь {person.Name}: ");

            for (int itemNumber = 0; itemNumber < person.GiveCopyOfInventory().Length; itemNumber++)
            {
                Console.SetCursorPosition(person.InventoryPositionX, person.InventoryPositionY + emptyLines + itemNumber);
                Console.WriteLine((itemNumber + 1) + ") " + person.GiveCopyOfInventory()[itemNumber].Name + " - " + person.GiveCopyOfInventory()[itemNumber].Price + " золотых");

                if (itemNumber == person.GiveCopyOfInventory().Length - 1)
                {
                    Console.SetCursorPosition(person.InventoryPositionX, person.InventoryPositionY + emptyLines + itemNumber + 2);
                    Console.WriteLine($"Деньги: {person.Money} золотых");
                }
            }
        }
    }
}
