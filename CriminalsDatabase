using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Start
{
    class Program
    {
        public static void Main()
        {
            Database database = new Database();
            bool isWorking = true;

            while (isWorking)
            {
                database.Search();
            }
        }
    }

    class Database
    {
        private List<Criminal> _criminals;

        public Database()
        {
            _criminals = new List<Criminal>();
            AddCriminals();
        }

        public void Search()
        {
            bool isFound = false;

            while (!isFound)
            {
                Console.WriteLine("Для поиска непойманных преступников введите данные:");
                Console.Write("1) Введите вес преступника: ");
                string weightInput = Console.ReadLine();
                Console.Write("2) Введите рост преступника: ");
                string heigthInput = Console.ReadLine();
                Console.Write("3) Введите национальность преступника: ");
                string nationalityInput = Console.ReadLine();

                if (int.TryParse(weightInput, out int weight) && weight > 0 && int.TryParse(heigthInput, out int heigth) && heigth > 0)
                {
                    var foundCriminals = _criminals.Where(criminal => criminal.Weight == weight && criminal.Height == heigth && criminal.Nationality == nationalityInput && criminal.IsImprisoned == false);
                    isFound = ShowCriminals(foundCriminals);
                }
                else
                {
                    Console.WriteLine("Неправильный ввод данных...");
                }
                Console.WriteLine("Нажмите любую кнопку для поиска следующего преступника...");
                Console.ReadKey();
                Console.Clear();
            }
        }

        private bool ShowCriminals(IEnumerable<Criminal> foundCriminals)
        {
            if (foundCriminals.Count() > 0)
            {
                foreach (var criminal in foundCriminals)
                {
                    Console.WriteLine(criminal.Fio);
                }
                return true;
            }
            else
            {
                Console.WriteLine("Преступников с такими параметрами не найдено...");
                return false;
            }
        }

        private void AddCriminals()
        {
            _criminals.Add(new Criminal("Чальцев Савва Денисович", false, 188, 60, "Русский"));
            _criminals.Add(new Criminal("Чальцева Ирма Геннадьевна", true, 170, 65, "Украинка"));
            _criminals.Add(new Criminal("Иванов Иван Иванович", false, 176, 80, "Русский"));
        }
    }

    class Criminal
    {
        public string Fio { get; private set; }
        public bool IsImprisoned { get; private set; }
        public int Height { get; private set; }
        public int Weight { get; private set; }
        public string Nationality { get; private set; }

        public Criminal(string fio, bool isImprisoned, int height, int weight, string nationality)
        {
            Fio = fio;
            IsImprisoned = isImprisoned;
            Height = height;
            Weight = weight;
            Nationality = nationality;
        }
    }
}
