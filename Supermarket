using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Start
{
    class Test
    {
        public static void Main()
        {
            Supermarket ashan = new Supermarket(10);
            ashan.ServeClients();
        }
    }

    class Supermarket
    {
        private Random _random = new Random();
        private Queue<Client> _clients;
        private int _clientsNumber;

        public Supermarket(int clientsNumber)
        {
            _clients = new Queue<Client>();
            _clientsNumber = clientsNumber;
            AddClients();
        }

        public void ServeClients()
        {
            while (_clients.Count > 0)
            {
                Console.WriteLine("Подзовите следующего клиента, нажав любую кнопку...");
                Console.ReadKey();
                Console.WriteLine("\nНовый клиент подходит к касе!\n");
                Client tempClient = _clients.Dequeue();

                while (tempClient.PriceOfBasket > tempClient.Money)
                {
                    tempClient.DeleteRandomProduct();
                }
                tempClient.BuyProducts();
                tempClient.ShowBasket();
            }
        }

        private void AddClients()
        {
            int maxMoney = 1000;
            int minMoney = 100;

            for (int i = 0; i < _clientsNumber; i++)
            {
                _clients.Enqueue(new Client(_random.Next(minMoney, maxMoney), new List<Product>(), new List<Product>()));
            }
        }
    }

    class Client
    {
        private static Random _random = new Random();
        private List<Product> _products;
        private List<Product> _productsToBuy;
        public int Money { get; private set; }
        public int PriceOfBasket { get; private set; }

        public Client(int money, List<Product> products, List<Product> productsToBuy, int priceOfBasket = 0)
        {
            _products = products;
            _productsToBuy = productsToBuy;
            Money = money;
            PriceOfBasket = priceOfBasket;
            FillBasket();
        }

        public void BuyProducts()
        {
            Money -= PriceOfBasket;
            Console.WriteLine($"Клиент заплатил {PriceOfBasket}$ за список продуктов:");
        }

        public void DeleteRandomProduct()
        {
            int indexOfRandomProduct = _random.Next(0, _products.Count);
            Console.WriteLine($"{_products[indexOfRandomProduct].Name} был удалён из корзины!");

            if (_products.Count == 0)
            {
                Console.WriteLine("Клиент-бомж, вы выкидываете его из магазина!");
            }
            else
            {
                PriceOfBasket -= _products[indexOfRandomProduct].Price;
                _products.RemoveAt(indexOfRandomProduct);
            }
        }

        public void ShowBasket()
        {
            for (int i = 0; i < _products.Count; i++)
            {
                int numberOfProduct = i + 1;
                Console.WriteLine($"{numberOfProduct}) - {_products[i].Name} - {_products[i].Price}");
            }
        }

        private void FillBasket()
        {
            AddProducts();
            int minAmountProductsToBuy = 1;
            int maxAmountProductsToBuy = 6;
            int amountProducts = _random.Next(minAmountProductsToBuy, maxAmountProductsToBuy + 1);

            for (int j = 0; j < amountProducts; j++)
            {
                int indexOfRandomProduct = _random.Next(0, _productsToBuy.Count);
                _products.Add(_productsToBuy[indexOfRandomProduct]);
                PriceOfBasket += _productsToBuy[indexOfRandomProduct].Price;
            }
        }

        private void AddProducts()
        {
            _productsToBuy.Add(new Product(50, "Колбаса"));
            _productsToBuy.Add(new Product(30, "Сыр"));
            _productsToBuy.Add(new Product(100, "Туалетка"));
            _productsToBuy.Add(new Product(150, "Чипсы Lays"));
            _productsToBuy.Add(new Product(70, "Пиво"));
            _productsToBuy.Add(new Product(10, "Хлеб"));
        }
    }

    class Product
    {
        public int Price { get; private set; }
        public string Name { get; private set; }

        public Product(int price, string name)
        {
            Price = price;
            Name = name;
        }
    }
}
